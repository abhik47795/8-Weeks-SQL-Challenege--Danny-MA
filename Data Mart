  /*
Convert the week_date to a DATE format

Add a week_number as the second column for each week_date value, for example any value from the 1st of January to 7th of January will be 1, 8th to 14th will be 2 etc

Add a month_number with the calendar month for each week_date value as the 3rd column

Add a calendar_year column as the 4th column containing either 2018, 2019 or 2020 values

Add a new column called age_band after the original segment column using the following mapping on the number inside the segment value
*/

select * from sale limit 2;
use danny1;
create view sales as
with cte as
(
select wdate,region,platform,segment,customer_type,transactions,sales from(
select *,str_to_date(weekdate,"%d/%m/%y") as wdate from sale) as a
)
select *,week(wdate) as week_no,month(wdate) as month_no,
if(year(wdate) in(2018,2019,2020), "Y","N") as cal_yr,
if(left(segment,1)="C","couples","Families") as class,
case when right(segment,1)=1 then "Young"
when right(segment,1)=2 then "middle"
when right(segment,1)=3 then "retirees"
else "unknown" end as demographs,
round(sales/transactions,2) as avg_transc
from cte;

select * from sales;
select *,dayofweek(wdate) as day_no,dayname(wdate) as day_name from sales;
select distinct(week_no) from sales order by week_no;
select year(wdate) as yr, count(transactions) from sales group by yr;
select month(wdate) as mnt,region,sum(sales) as tot from sales group by region,mnt order by mnt,region;

select platform,count(transactions) as cnt from sales group by platform;
select b.*,(tot/nxt)*100 as perc from(
select a.*,sum(tot) over( partition by mnt) as nxt from(
select month(wdate) as mnt,platform,sum(sales) as tot from sales group by mnt,platform order by mnt) as a) as b;

select b.*,(tot/nxt)*100 as perc from(
select a.*,sum(tot) over( partition by mnt) as nxt from(
select month(wdate) as mnt,demographs,sum(sales) as tot from sales group by mnt,demographs order by mnt) as a) as b;
